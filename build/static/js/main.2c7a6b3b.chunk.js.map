{"version":3,"sources":["style.js","components/AccountForm.js","components/PostsList.js","components/Nav.js","components/PostsAdd.js","components/PostsView.js","components/SinglePost.js","components/Messages.js","index.js"],"names":["headerStyle","backgroundColor","AccountForm","type","setToken","setUser","useState","username","setUsername","password","setPassword","title","oppositeTitle","oppositeType","history","useHistory","handleSubmit","ev","a","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","user","response","json","data","token","localStorage","setItem","push","onSubmit","value","onChange","target","placeholder","to","PostsList","posts","setPosts","useEffect","fetchPosts","map","post","_id","Nav","onClick","removeItem","PostsAdd","setTitle","description","setDescription","price","setPrice","PostsView","id","useParams","find","singlePost","SinglePost","text","setText","handleDelete","success","newPosts","filter","p","handleMessages","message","content","Card","isAuthor","Button","variant","Messages","messages","fromUser","App","getItem","fetchUser","style","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c7a6b3b.chunk.js","sourcesContent":["export const headerStyle = {\n    backgroundColor: 'olive',\n}","import React, { useState } from 'react';\nimport {Link, \n  useHistory\n} from 'react-router-dom'; \n\nconst AccountForm = ({type, setToken, setUser}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const title = type === 'login' ? 'Login' : 'Register';\n  const oppositeTitle = type === 'login' ? 'Register' : 'Login';\n  const oppositeType = type === 'login' ? 'register' : 'login';\n  const history = useHistory();\n\n\n  const handleSubmit = async (ev) => {\n    ev.preventDefault();\n    console.log('username: ', username);\n    console.log('password: ', password);\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/${type}`, { \n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password\n        }\n      })\n    });\n    console.log('response: ', response);\n    const {data} = await response.json();\n    console.log('{data}: ', {data});\n    const token = data?.token;\n    console.log('token: ', token);\n    if (token) {\n      localStorage.setItem('token', token)\n      setToken(token);\n      const response = await fetch(`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      // const contentType = response.headers.get('Content-Type')\n      const {data} = await response.json();\n      console.log('data: ', data);\n      setUser(data);\n    \n    setUsername('');\n    setPassword('');\n    history.push('./posts')\n    }\n  }\n\n  return <>\n    <h2>{title}</h2>\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={username} onChange={(ev) => setUsername(ev.target.value)}placeholder=\"username\"></input>\n      <input type=\"password\" value={password} onChange={(ev) => setPassword(ev.target.value)}placeholder=\"password\"></input>\n      <button type=\"submit\">{title}</button>\n    </form>    \n    <Link to={`/${oppositeType}`}>{oppositeTitle}</Link>\n  </>\n}\n\nexport default AccountForm;","import React, { useEffect } from 'react';\nimport {SinglePost} from './';\n\n\n\nconst PostsList = ({posts, setPosts, token}) => {\n\n    useEffect(() => {\n        fetchPosts()\n        console.log('posts: ',)\n      }, []);\n\n    const fetchPosts = async () => {\n\n        if(token) {\n            const response = await fetch('http://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts', {\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                },\n            })\n            const data = await response.json();\n            setPosts(data.data.posts)\n        } else if (!token) {\n            const response = await fetch('http://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts');\n            const data = await response.json();\n            setPosts(data.data.posts)\n        }\n      }\n\n    return <>\n        <h1>Posts</h1>\n        {\n            posts && posts.map((post) => {\n                return <SinglePost token={token} posts={posts} setPosts={setPosts} post={post} key={post._id}/>\n            })\n        }\n    </>\n}\n\n\nexport default PostsList;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'; \n\n\n\nconst Nav = ({token, setToken}) => {\n\n    return <>\n        <nav>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/login\">Login</Link>\n            <Link to=\"/register\">Register</Link>\n            <Link to=\"/posts\">Posts</Link>\n            {token && <Link to=\"/profile\">Profile</Link>}\n            {token && <Link to=\"/createpost\">Add Posts</Link>}\n            { token && <button onClick = {\n                () => {\n                    localStorage.removeItem('token')\n                    setToken('')\n                }\n            }> Logout</button>}\n        </nav>\n    </>\n\n}\n\n\nexport default Nav;","import React, { useEffect, useState } from 'react';\n\nconst PostsAdd = ({token, posts, setPosts}) => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [price, setPrice] = useState('');\n\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                post: {\n                    title: title,\n                    description: description,\n                    price: price\n                }   \n            })\n        });\n        const {data} = await response.json();\n        setTitle('');\n        setDescription('');\n        setPrice('');\n        setPosts([...posts, data.post])\n    }\n\n    return <> \n        <form onSubmit={handleSubmit}>\n            <input type=\"text\" value={title} onChange={(ev) => setTitle(ev.target.value)}placeholder=\"title\"></input>\n            <input type=\"text\" value={description} onChange={(ev) => setDescription(ev.target.value)}placeholder=\"description\"></input>\n            <input type=\"text\" value={price} onChange={(ev) => setPrice(ev.target.value)}placeholder=\"price\"></input>\n            <button type=\"submit\" placeholder=\"Create Post\">Post</button>\n        </form>\n    </>\n}\n\n\nexport default PostsAdd;\n","import React, { useState, useEffect } from 'react';\nimport {useParams} from 'react-router-dom';\nimport {SinglePost} from './';\n\n\nconst PostsView = ({posts, setPosts}) => {\n    const {id} = useParams();\n    const [post, setPost] = useState(() => {\n        return posts.find(singlePost => singlePost._id === id)\n    });\n\n    return post ? <SinglePost post={post}></SinglePost> : ''\n}\n\n\n\nexport default PostsView;","import React, { useState }from 'react';\nimport {Link} from 'react-router-dom';\nimport {Button, Card} from 'react-bootstrap';\n\n\nconst SinglePost = ({post, posts, setPosts, token}) => {\n\n    const [text, setText] = useState('');\n\n    const handleDelete = async () => {\n        const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}`, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            }\n        })\n        const {success} = await response.json();\n        if(success) {\n            const newPosts = posts.filter((p) => p._id !== post._id)\n            setPosts(newPosts)\n        }\n    }\n    const handleMessages = async (ev) => {\n        ev.preventDefault();\n        const response = await fetch (`https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/posts/${post._id}/messages`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n                message: {\n                  content: text,\n                }\n              })\n        });\n        const {data} = await response.json();\n        setText('')\n    }\n\n    return  post ? <>\n                <Card>\n                    <Link to={`/posts/${post._id}`} > <h3>{ post.title }</h3> </Link>\n                    <div>{post.description}</div>\n                    <div>{ post.body }</div>\n                </Card>\n                {(token && !post.isAuthor) && <form onSubmit={handleMessages}>\n                    <input type=\"text\" value={text} onChange={(ev) => setText(ev.target.value)} placeholder=\"message\"></input>\n                    <Button type=\"submit\" variant='primary'>Send Message</Button>\n                    </form>}\n                {post.isAuthor && <Button type=\"button\" variant='danger' onClick={handleDelete}>Delete</Button>}\n            </> : ''\n}\n\nexport default SinglePost;","import React from 'react';\nimport {Card} from 'react-bootstrap';\n\nconst Messages = ({user}) => {\n    return <>\n        <h1>Messages</h1>\n        {\n            user && user.messages && user.messages.map((message) => {\n                return <Card key={message._id}>\n                    <div>Post Title:{message.post.title}</div>\n                    <div>User:{message.fromUser.username}</div>\n                    <div>Content:{message.content}</div>\n                </Card>\n            })\n        }\n    </>\n}\n\nexport default Messages;","import React, {\n  useEffect, \n  useState \n} from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport {\n  BrowserRouter as Router, \n  Route,\n} from 'react-router-dom';\n\nimport './style.js';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {\n  headerStyle\n} from './style.js'\n\nimport {\n  AccountForm,\n  PostsList,\n  PostsAdd,\n  Nav,\n  PostsView,\n  Messages,\n} from './components';\n\nconst App = () => {\n  const [token, setToken] = useState( () => {\n    if (localStorage.getItem('token')) {\n      return localStorage.getItem('token')\n    } else {\n      return ''\n    }\n  });\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetchUser();\n    console.log('user: ')\n  }, [token])\n\n  const fetchUser = async () =>{\n    const response = await fetch('https://strangers-things.herokuapp.com/api/2010-CPU-RM-WEB-PT/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n    },\n    })\n    const data = await response.json();\n    console.log(data)\n    setUser(data.data)\n  }\n\n\n  return <>\n      <h1 style={headerStyle}>Strangers Things</h1>\n      {user?.username && <div>Hello {user?.username}</div> }\n              <Nav token={token} setToken={setToken}/>\n                <Route exact path=\"/login\">\n                  <AccountForm type={'login'} setToken={setToken} setUser={setUser}/>\n                </Route>\n                \n                <Route exact path=\"/register\">\n                  <AccountForm type={'register'} setToken={setToken} setUser={setUser}/>\n                </Route>\n\n                <Route exact path =\"/posts\">\n                  <PostsList posts={posts} setPosts={setPosts} token={token}/>\n                </Route>\n\n                <Route exact path='/'>\n                  <h1>Welcome to Stranger's Things!</h1>\n                </Route>\n\n                <Route exact path='/posts/:id'>\n                  <PostsView posts={posts} setPosts={setPosts}/>\n                </Route>\n\n                <Route exact path = \"/createpost\">\n                  <PostsAdd posts={posts} setPosts={setPosts} token={token}/>\n                </Route>\n\n                <Route exact path = \"/profile\">\n                  <Messages user={user}/>\n                </Route>\n  </> \n\n}\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('app'),\n);"],"sourceRoot":""}